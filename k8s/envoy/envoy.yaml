---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: envoy
  labels:
    app: envoy
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: envoy


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
  namespace: envoy
data:
  config: |
    static_resources:

      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080

        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog

              http_filters:
              # evaluate JWT tokens, allow_missing allows API Key also
              - name: envoy.filters.http.jwt_authn
                typed_config: 
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    apigee:
                      issuer: https://sanes-devinternet.weu.apis.sandigital.dev.corp/remote-token/token
                      audiences:
                      - remote-service-client
                      remote_jwks:
                        http_uri:
                          uri: https://sanes-devinternet.weu.apis.sandigital.dev.corp/remote-token/certs
                          cluster: apigee-auth-service
                          timeout: 5s
                        cache_duration:
                          seconds: 300
                      payload_in_metadata: https://sanes-devinternet.weu.apis.sandigital.dev.corp/remote-token/token
                  rules:
                  - match:
                      prefix: /
                    requires:
                      requires_any:
                        requirements:
                        - provider_name: apigee
                        - allow_missing: {}

               # evaluate Apigee rules
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  grpc_service:
                    envoy_grpc:
                      cluster_name: apigee-remote-service-envoy
                    timeout: 1s
                  metadata_context_namespaces:
                  - envoy.filters.http.jwt_authn
              
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

              access_log: 

              # collect Apigee analytics
              - name: envoy.access_loggers.http_grpc
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
                  common_config:
                    transport_api_version: V3
                    grpc_service:
                      envoy_grpc:
                        cluster_name: apigee-remote-service-envoy
                    log_name: apigee-remote-service-envoy

              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/rest/test"
                    route:
                      cluster: api

      clusters:
      - name: api
        connect_timeout: 1.00s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: api
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: api
                    port_value: 9090
                    ipv4_compat: true

      # define cluster for Apigee JWKS certs
      - name: apigee-auth-service
        connect_timeout: 2s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: apigee-auth-service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: sanes-devinternet.weu.apis.sandigital.dev.corp
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: "sanes-devinternet.weu.apis.sandigital.dev.corp"

      # define cluster for Apigee remote service
      - name: apigee-remote-service-envoy
        type: LOGICAL_DNS
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: apigee-remote-service-envoy
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: apigee-remot-system.sandbox-test.svc.cluster.local
                    port_value: 5000
        common_lb_config:
          healthy_panic_threshold:
            value: 50.0
        health_checks:
          - timeout: 1s
            interval: 5s
            interval_jitter: 1s
            no_traffic_interval: 5s
            unhealthy_threshold: 1
            healthy_threshold: 3
            grpc_health_check: {}
        connect_timeout: 0.25s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  namespace: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      service: envoy
      app: envoy
  template:
    metadata:
      labels:
        service: envoy
        app: envoy
    spec:
      volumes:
      - name: config
        configMap:
          name: envoy-configmap
          items:
          - key: config
            path: envoy.yaml
      containers:
        - name: envoy
          #image: envoyproxy/envoy-alpine:v1.13.1
          image: envoyproxy/envoy-dev:8537d2a29265e61aaa0349311e6fc5d592659b08
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/envoy
              readOnly: true
